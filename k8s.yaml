apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: streamlit-backend-config
spec:
  # 1) Apply your existing Cloud Armor policy
  securityPolicy:
    name: cloud-armor-config

  # 2) Override the health check to probe /model-monitor/
  healthCheck:
    type: HTTP
    requestPath: /model-monitor/      # must match your baseUrlPath
    port: 80
    checkIntervalSec: 10
    timeoutSec: 5
    healthyThreshold: 1
    unhealthyThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: dasboard-streamlit
  annotations:
    cloud.google.com/backend-config: '{"ports":{"80":"streamlit-backend-config"}}'
    cloud.google.com/neg: '{"ingress":true}'
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: dasboard-streamlit
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dasboard-streamlit
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dasboard-streamlit
  template:
    metadata:
      labels:
        app: dasboard-streamlit
    spec:
      containers:
      - name: dasboard-streamlit
        image: europe-west1-docker.pkg.dev/allyy-artifacts/ms-dasboard-streamlit/dasboard-streamlit:1.0.0
        ports:
        - containerPort: 80

        # Ensure readiness checks only pass when the app is truly up
        readinessProbe:
          httpGet:
            path: /model-monitor/
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10

        # Liveness to auto-restart hung pods
        livenessProbe:
          httpGet:
            path: /model-monitor/
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 20
        env:
          - name: ST_ENVIRONMENT
            value: test